#! /bin/bash -i
#############################
#        Rule Name          #
#############################
rule_name_prompt()
{
rulename=$(whiptail --inputbox "What do you want to name the rule?" 10 60 --title "Rule Name" 3>&1 1>&2 2>&3)

cat << EOF >> $rulename.yaml
# Elasticsearch Host
es_host: elasticsearch
es_port: 9200

# (Required)
# Rule name, must be unique
name: $rulename

EOF

}

#############################
#        Index Name         #
#############################
index_name_prompt()
{

indexname=$(whiptail --inputbox "What elasticsearch index do you want to use? Below are the default Index Patterns used in Security Onion: \n    *:logstash-* \n    *:logstash-beats-* \n    *:elastalert_status*" 12 78 --title "Index Name" 3>&1 1>&2 2>&3)

cat << EOF >> $rulename.yaml
# (Required)
# Index to search, wildcard supported
index: "$indexname"

EOF

}


#############################
#       Alert Options       #
#############################
alert_option_prompt()
{
alertoption=$(whiptail --title "Alert Options" --radiolist \
"By default, all matches will be written back to the elastalert index. \nPlease choose from the below options:" 15 100 4 \
"debug" "Will write alerts to the *:elastalert_status* index" ON \
"slack" "Send a notification to a predefined Slack channel" OFF \
"email" "Connect to an smtp server located at smtp_host, or localhost by default." OFF 3>&1 1>&2 2>&3)

    if [ ${alertoption,,} = "slack" ] ; then
 slackoption=$(whiptail --inputbox "The webhook URL that includes your auth data and the ID of the channel (room) you want to post to.\n\nGo to the Incoming Webhooks section in your Slack account https://XXXXX.slack.com/services/new/incoming-webhook,\nchoose the channel, click ‘Add Incoming Webhooks Integration’ and copy the resulting URL. You can use a list of URLs to send to multipe channels.\n\nPlease enter the webhook URL below:" 25 85 --title "Slack Alerter Option" 3>&1 1>&2 2>&3)
        cat << EOF >> $rulename.yaml
# (Required)
# The alert is use when a match is found
alert:
- slack

# (required,Slack specific)
# Enter the webhook URL below
slack:
 - $slackoption

EOF

    elif [ ${alertoption,,} = "email" ] ; then
        emailoption=$(whiptail --inputbox "Please enter the email address you want to send the alerts to.\nNote: Ensure the Master Server is configured for SMTP."  25 85 --title "Slack Alerter Option" 3>&1 1>&2 2>&3)
        cat << EOF >> $rulename.yaml
# (Required)
# The alert is use when a match is found
alert:
- email

# (required, email specific)
# a list of email addresses to send alerts to
email:
 - $emailoption
EOF
    elif [ ${alertoption,,} = "debug" ] ; then
        whiptail --title "debug Alerter Options"  --msgbox "Using the default alert type of debug.\nAlerts will only be written to the *:elastalert_status* index." 10 90
   cat << EOF >> $rulename.yaml
# (Required)
# The alert is use when a match is found
alert:
- debug

EOF

    fi
}

#############################
#      Filter Options       #
#############################
filter_options_prompt()
{
filteroption=$(whiptail --title "Filter Options" --radiolist \
"This script will allow you to generate basic filters." 15 100 4 \
"default" "Uses a wildcard search that will include all logs for the $indexname index." ON \
"term" "Allows you to match a value in a field." OFF \
"wildcard" "Allows you to use the wildcard * in the field_value." OFF 3>&1 1>&2 2>&3)


    if [ ${filteroption,,} = "default" ] ; then
whiptail --title "debug Alerter Options"  --msgbox "Using default filter options that will include all logs for the $indexname index" 10 90
	     cat << EOF >> $rulename.yaml
#(Required)
# A list of Elasticsearch filters used for find events
# These filters are joined with AND and nested in a filtered query
# For more info: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl.html
filter:

- wildcard:
    event_type: "*"

EOF

    elif [ ${filteroption,,} = "term" ] ; then
	field_name=$(whiptail --inputbox "Allows you to match a value in a field.  For example field source_ip and value 192.168.1.1 or choose a specific log type you want to rule to apply ie. field:event_type value bro_http \n\nWhat field do you want to use?" 15 65 --title "Term Filter Options" 3>&1 1>&2 2>&3)
	field_value=$(whiptail  --inputbox "What is the value for the $field_name field." 15 65 --title "Term Filter Options" 3>&1 1>&2 2>&3)
	    cat << EOF >> $rulename.yaml
#(Required)
# A list of Elasticsearch filters used for find events
# These filters are joined with AND and nested in a filtered query
# For more info: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query$
filter:

- term:
    $field_name: "$field_value"

EOF

    elif [ ${filteroptions,,} = "wildcard" ] ; then
	field_name=$(whiptail  --inputbox "Wildcard: Allows you to use the wildcard * in the field_value.  For example field_type: useragent and field_value: *Mozilla*" 15 65 --title "Wildcard Filter Options" 3>&1 1>&2 2>&3)
	field_value=$(whiptail  --inputbox "What is the value for the $field_name field." 15 65 --title "Wildcard Filter Options" 3>&1 1>&2 2>&3)
            cat << EOF >> $rulename.yaml
#(Required)
# A list of Elasticsearch filters used for find events
# These filters are joined with AND and nested in a filtered query
# For more info: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl.html
filter:

- wildcard:
    $field_name: "$field_value"

EOF

fi
}

############################
#     Re-alert Options     #
############################
realert_prompt()
{
if (whiptail --yesno "The realert option allows you to ignore repeating alerts for a given period of time.\nWould you like to set a realert timeframe?" 8 78 --title "ReAlert Option") then
     realert_unit_of_measure=$(whiptail  --inputbox "Please choose from the following units of measure:\n  weeks, days, hours, minutes, or seconds" 10 65 --title "ReAlert Options" 3>&1 1>&2 2>&3)
     realert_timeframe=$(whiptail  --inputbox "Please enter the number of $realert_unit_of_measure you want to use." 10 65 --title "ReAlert Options" 3>&1 1>&2 2>&3)

	cat << EOF >> $rulename.yaml
# This option allows you to ignore repeating alerts for a period of time.
realert:
  $realert_unit_of_measure: $realert_timeframe

EOF
fi
}
#######################
#    Final prompt     #
#######################
final_prompt()
{
current_directory=$(pwd)
whiptail --title "Final Prompt"  --msgbox "Writing rule to the following location:\n    $current_directory/$rulename.yaml" 10 90
}

###################################
# Functions for Cardinality Rules #
###################################
cardinality_rule_prompt()
{
cardinality_field=$(whiptail  --inputbox "The Cardinality rule will alert when the Maximum or minimum number of unique values for a given field reaches a threshold\n\nWhat field do you want to be the Cardinality Field?" 15 65 --title "Cardinality Rule Options" 3>&1 1>&2 2>&3)
cat  << EOF >> $rulename.yaml

# (Required)
# Type of alert.
# The Cardinality rule matches when the total number of unique values for a certain field , within a given timeframe is higher or lower than a threshold.
type: cardinality

# (Required, cardinality specific)
# Count the number of unique value for this field
cardinality_field: $cardinality_field

EOF

cardinality_max_min=$(whiptail --title "Cardinality Rule Options" --radiolist \
"Please choose from the options below:" 15 100 4 \
"maximum_cardinality" "Alert on values MORE than X unique values in the cardinality field." ON \
"minimum_cardinality" " alert on values LESS than X unique values in the cardinality field" OFF 3>&1 1>&2 2>&3)
    if [ $cardinality_max_min = "maximum_cardinality" ] ; then
	cardinality_max=$(whiptail  --inputbox "Please enter maximum cardinality value" 15 65 --title "Cardinality Rule Options" 3>&1 1>&2 2>&3)

	cat << EOF >> $rulename.yaml
# (Required, frequency specific)
# Alert when there is more than X unique values
max_cardinality: $cardinality_max

EOF

    elif [ $cardinality_max_min = "minimum_cardinality" ] ; then
        cardinality_min=$(whiptail  --inputbox "Please enter minimum cardinality value" 15 65 --title "Cardinality Rule Options" 3>&1 1>&2 2>&3)

        cat << EOF >> $rulename.yaml
# (Required, frequency specific)
# Alert when there is less than X unique values
min_cardinality: $cardinality_min

EOF
    fi

timeframe_units=$(whiptail  --inputbox "The Cardinality Timeframe is defined as the number of unique values in the most recent X hours.\n\nPlease choose from the following units of measure:\n  weeks, days, hours, minutes, or seconds" 15 65 --title "Timeframe Options" 3>&1 1>&2 2>&3)
timeframe=$(whiptail  --inputbox "Please enter the number of $timeframe_units you want to use." 15 65 --title "Timeframe Options" 3>&1 1>&2 2>&3)

    cat << EOF >> $rulename.yaml
# (Required, frequency specific)
# The cardinality is defined as the number of unique values for the most recent 4 hours

timeframe:
  $timeframe_units: $timeframe

EOF

if (whiptail --yesno "The query_key counts by this field. For each unique value of the query_key field, cardinality will be counted separately.\n\nWould you like to set the query_key parameter?" 8 78 --title "Query Key Option") then
     query_key=$(whiptail  --inputbox "What field do you want the query_key to be?" 15 65 --title "Query Key Options" 3>&1 1>&2 2>&3)
        cat << EOF >> $rulename.yaml
# (Optional, frequency specific)
# query_key: Group cardinality counts by this field. For each unique value of the query_key field, cardinality will be counted separately.
query_key: $query_key

EOF
        fi


}

#################################
# Functions for Blacklist Rules #
#################################
blacklist_rule_prompt()
{
compare_key=$(whiptail  --inputbox "The blacklist rule will compare the values contained in a text file against the compare_key and alert if there is a match.\n\nWhat field do you want to compare to the blacklist?" 15 65 --title "Blacklist rule Options" 3>&1 1>&2 2>&3)
      cat << EOF >> $rulename.yaml
# (Required)
# Type of alert.
# The Blacklist rule will check  a certain field against a blacklist and match if it is in the blacklist
type: blacklist

# (Required, blacklist)
# The name of the field to use to compare to the blacklist. If the field is null, those events will be ignored.
compare_key: $compare_key

EOF

if (whiptail --yesno "The blacklist file should be a text file with a single value per line.  Note: The file needs to be accessible by the so-elastalert container.\n\nWould you like to create the file now?" 10 78 --title "Blacklist Option") then
     file_location=$(whiptail  --inputbox "Please enter the full path and filename of the blacklist." 10 65 --title "Blacklist File Location" 3>&1 1>&2 2>&3)
     counter=0
     while [ $counter -eq 0 ] ; do
     file_value=$(whiptail  --inputbox "Please enter the values for the $compare_key filed one entry at a time.\n\nWhen finished type quit." 15 65 --title "Blacklist values" 3>&1 1>&2 2>&3)
	  if [ ${file_value,,} = "quit" ] ; then
                 counter=1
          else
                 echo $file_value >> $file_location
                 counter=0
          fi
    done

    cat << EOF >> $rulename.yaml
# (Required, blacklist)
# A list of blacklisted values, and/or a list of paths to flat files which contain the blacklisted values
blacklist:
    - "!file $file_location"

EOF

else 
    file_location=$(whiptail  --inputbox "Please enter the full path and filename of the blacklist." 15 65 --title "Blacklist File Location" 3>&1 1>&2 2>&3)

            cat << EOF >> $rulename.yaml
# (Required, blacklist)
# A list of blacklisted values, and/or a list of paths to flat files which contain the blacklisted values
blacklist:
    - "!file $file_location"

EOF

fi
}

#################################
# Functions for Whitelist Rules #
#################################
whitelist_rule_prompt()
{
compare_key=$(whiptail  --inputbox "The whitelist rule will compare the values contained in a text file against the compare_key and alert if there is not a match.\n\nWhat field do you want to compare to the whitelist?" 15 65 --title "Whitelist rule Options" 3>&1 1>&2 2>&3)

      cat << EOF >> $rulename.yaml
# (Required)
# Type of alert.
# The Whitelist rule will check a certain field against a whitelist and match if it is not in the whitelist
type: whitelist

# (Required, wlacklist)
# The name of the field to use to compare to the wlacklist. If the field is null, those events will be ignored.
compare_key: $compare_key

EOF

if (whiptail --yesno "The whitelist file should be a text file with a single value per line.  Note: The file needs to be accessible by the so-elastalert container.\n\nWould you like to create the file now?" 10 78 --title "Whitelist Rule Option") then 
     file_location=$(whiptail  --inputbox "Please enter the full path and filename of the whitelist." 10 65 --title "Whitelist File Location" 3>&1 1>&2 2>&3)
     counter=0
     while [ $counter -eq 0 ] ; do
     file_value=$(whiptail  --inputbox "Please enter the values for the $compare_key filed one entry at a time.\n\nWhen finished type quit." 15 65 --title "Whitelist values" 3>&1 1>&2 2>&3)
          if [ ${file_value,,} = "quit" ] ; then
                 counter=1
          else
                 echo $file_value >> $file_location
                 counter=0
          fi
    done

    cat << EOF >> $rulename.yaml
# (Required, whitelist)
# A list of whitelisted values, and/or a list of paths to flat files which contain the whitelisted values
whitelist:
    - "!file $file_location"

EOF

else
    file_location=$(whiptail  --inputbox "Please enter the full path and filename of the whitelist." 15 65 --title "Whitelist File Location" 3>&1 1>&2 2>&3)

            cat << EOF >> $rulename.yaml
# (Required, whitelist)
# A list of whitelisted values, and/or a list of paths to flat files which contain the whitelisted values
whitelist:
    - "!file $file_location"

EOF

fi
}

###################################
#  Functions for Frequency Rules  #
###################################
frequency_rule_prompt()
{
num_events=$(whiptail  --inputbox "The Frequency rule matches when there are at least a certain number of events in a given timeframe.\n\nEnter the number of events you want to alert on:" 10 85 --title "Frequency Rule" 3>&1 1>&2 2>&3)
timeframe_units=$(whiptail  --inputbox "The Cardinality Timeframe is defined as the number of unique values in the most recent X hours.\n\nPlease choose from the following units of measure:\n  weeks, days, hours, minutes, or seconds"  15 65 --title "Timeframe Options" 3>&1 1>&2 2>&3)
timeframe=$(whiptail  --inputbox "Please enter the number of $timeframe_units you want to use." 15 65 --title "Timeframe Options" 3>&1 1>&2 2>&3)

cat << EOF >> $rulename.yaml

# (Required)
# Type of alert.
# the frequency rule type alerts when num_events events occur with timeframe time
type: frequency

# (Required, frequency specific)
# Alert when this many documents matching the query occur within a timeframe
num_events: $num_events

# (Required, frequency specific)
# num_events must occur within this amount of time to trigger an alert
timeframe:
  $timeframe_units: $timeframe

EOF

if (whiptail --yesno "The frequency rule has the below optional fields:\n  use_count_query: \n  use_terms_query: \n\n Would you like to set the optional settings?" 10 78 --title "Frequency Rule Additional Options") then
    frequency_query_type=$(whiptail --title "Cardinality Rule Options" --radiolist \
    "Please choose from the options below:" 15 100 4 \
    "use_count_query" "If true, ElastALert will poll Elasticsearch using the count api." ON \
    "use_terms_query" "If true, ElastAlert will make an aggregation query against Elasticsearch." OFF  3>&1 1>&2 2>&3)
        if [ $frequency_query_type = "use_count_query" ] ; then
            cat << EOF >> $rulename.yaml

# Only count number of records, instead of bringing all data back
use_count_query: true
doc_type: 'doc'

EOF
	elif [ $frequency_query_type = "use_terms_query" ] ; then
	    query_key=$(whiptail  --inputbox "Please enter the query_key." 15 65 --title "Frequency Rule Additional Options" 3>&1 1>&2 2>&3)
	    term_size=$(whiptail --inputbox " The term_size is the maximum number of unique terms that will be returned.\n\nPlease enter the term_size, default is 50." 15 65 --title "Frequency Rule Additional Options" 3>&1 1>&2 2>&3)

            cat << EOF >> $rulename.yaml
# Only count number of records, instead of bringing all data back
use_terms_query: true
doc_type: 'doc'

# Query_key count of documents will be stored independently for each value of query_key
query_key: $query_key

# Term_size is the maximum number of terms returned per query.  Default is 50.
terms_size: $term_size

EOF
        fi
fi
}

################################
#  Functions for Change Rules  #
################################
change_rule_prompt()
{
compare_key=$(whiptail  --inputbox "The change rule will monitor a certain field and match if that field changes.\nThe field must change with respect to the last event with the same query_key.\n\nWhat field do you want to monitor for changes?" 15 75 --title "Change Rule Options" 3>&1 1>&2 2>&3)
query_key=$(whiptail  --inputbox "The query_key parameter names the field that must be present in all of the events that are checked.\n\nPlease enter the query_key." 15 75 --title "Change Rule Options" 3>&1 1>&2 2>&3)
timeframe_units=$(whiptail  --inputbox "The value of compare_key must change in two events that are less than the timeframe apart to trigger an alert.\n\nPlease choose from the following units of measure:\n  weeks, days, hours, minutes, or seconds"  15 65 --title "Timeframe Options" 3>&1 1>&2 2>&3)
timeframe=$(whiptail  --inputbox "Please enter the number of $timeframe_units you want to use." 15 65 --title "Timeframe Options" 3>&1 1>&2 2>&3)
    cat << EOF >> $rulename.yaml
# (Required)
# Type of alert.
# This rule will monitor a certain field and match if that field changes.
type: change

# (Required, change specific)
# The field to look for changes in
compare_key: $compare_key

# (Required, change specific)
# Ignore documents without the compare_key (source_ip) field
ignore_null: true

# (Required, change specific)
# The change must occur in two documents with the same query_key
query_key: $query_key

# (Required, change specific)
# The value of compare_key must change in two events that are less than timeframe apart to t$
timeframe:
  $timeframe_units: $timeframe

EOF

}

################################
#  Functions for Spike Rules   #
################################
spike_rule_prompt()
{
spike_height=$(whiptail  --inputbox "The spike rule matches when the volume of events during a given time period is spike_height times larger or smaller than during the previous time period. Note: This value is a multiple!!  2 = 2x as many; 5 = 5x as many\n\nWhat do you want the spike_type parameter to be?" 15 65 --title "Spike Rule Options" 3>&1 1>&2 2>&3)

spike_type=$(whiptail --title "Spike Rule Options" --radiolist \
    "Please choose from the options below:" 15 100 4 \
    "up" "more than previous timeframe." ON \
    "down" "less than previous timeframe." OFF \
    "both" "up and down." OFF 3>&1 1>&2 2>&3)
timeframe_units=$(whiptail  --inputbox "The value of compare_key must change in two events that are less than the timeframe apart to trigger an alert.\n\nPlease choose from the following units of measure:\n  weeks, days, hours, minutes, or seconds"  15 65 --title "Timeframe Options" 3>&1 1>&2 2>&3)
timeframe=$(whiptail  --inputbox "Please enter the number of $timeframe_units you want to use." 15 65 --title "Timeframe Options" 3>&1 1>&2 2>&3)
    cat << EOF >> $rulename.yaml
# (Required)
# Type of alert.
# This rule matches when the volume of events during a given time period is spike_height times larger or smaller than during the previous time period.
type: spike

# (Required, spike specific)
# The ratio of number of events in the last timeframe to the previous timeframe.
spike_height: $spike_height

# (Required, spike specific)
# The spike being up, down or both
spike_type: $spike_type

# (Required, spike specific)
# The value of average out the rate of events over this time period.
timeframe:
  $timeframe_units: $timeframe

EOF

if (whiptail --yesno "The spike rule has the following optional parameters:\n - field_value: When set, uses the value of the field in the document and not the number of matching documents.\n - threshold_ref: The minimum number of events that must exist in the reference window for an alert to trigger.\n - threshold_cur: The minimum number of events that must exist in the current window for an alert to trigger.\n\nWould you like to choose these options?" 10 78 --title "Spike Rule Additional Options") then
    counter=0
        while [ $counter -eq 0 ] ; do
	                    counter=$(( $counter + 1 ))
    	spike_additional_options=$(whiptail --title "Spike Rule Additional Options" --radiolist \
    	"Please choose from the options below:" 15 100 6 \
   	"field_value" "The value of the field in the document and not the number of matching documents." ON \
    	"threshold_ref" "The min number of events that must exist in the reference window for an alert to trigger." OFF \ 
    	"threshold_cur" "The minimum number of events that must exist in the current window for an alert to trigger." OFF  \
 	"finish" "Continue building the rule" OFF 3>&1 1>&2 2>&3)
        if [ $spike_additional_options = "field_value" ] ; then
	    field_value_field=$(whiptail  --inputbox "What field would you like to use?" 15 65 --title "Spike Rule Additional Options" 3>&1 1>&2 2>&3)
cat << EOF >> $rulename.yaml
#(Optional, spike specific)
# field_value: When set, uses the value of the field in the document and not the number of matching documents.
field_value: $spike_options_select

EOF
# reset the counter for the while loop
        counter=0
	elif [ $spike_additional_options = "threshold_ref" ] ; then 
            threshold_ref_field=$(whiptail  --inputbox "What would you like the threshold_ref to be?" 15 65 --title "Spike Rule Additional Options" 3>&1 1>&2 2>&3)
                    cat << EOF >> $rulename.yaml
#(Optional, spike specific)
# The minimum number of events that must exist in the reference window for an alert to trigger.
threshold_ref: $threshold_ref_field

EOF
#Reset the counter for the while loop
        counter=0
    elif [ $spike_additional_options = "threshold_ref" ] ; then
        threshold_ref_field=$(whiptail  --inputbox "What would you like the threshold_ref to be?" 15 65 --title "Spike Rule Additional Options" 3>&1 1>&2 2>&3)
        cat << EOF >> $rulename.yaml
#(Optional, spike specific)
# The minimum number of events that must exist in the reference window for an alert to trigger.
threshold_ref: $threshold_ref_field

EOF
#Reset the counter for the while loop
        counter=0
    elif [ $spike_additional_options = "threshold_cur" ] ; then
        threshold_cur_field=$(whiptail  --inputbox "What would you like the threshold_cur to be?" 15 65 --title "Spike Rule Additional Options" 3>&1 1>&2 2>&3)
#(Optional, spike specific
# The minimum number of events that must exist in the current window for an alert to trigger.
threshold_cur: $threshold_cur_field

EOF
#Reset the counter for the while loop
        counter=0
    elif [ $spike_additional_options = "finish" ] ; then
	counter=1
    fi
  done
fi
}

########################### Testing Below ..... ########################
#timeframe=$(whiptail  --inputbox "Please enter the number of $timeframe_units you want to use." 15 65 --title "Timeframe Options" 3>&1 1>&2 2>&3)





function mainmenu() {
    rule_choice=$(whiptail --title "Main Menu" --fb --menu "Please choose the rule you want to create." 20 60 10 \
        "1" "Cardinality rules" \
        "2" "Blacklist rules" \
        "3" "Whitelist rules" \
	"4" "Frequency rules" \
	"5" "Change rules" \
	"6" "Spike rules" 3>&1 1>&2 2>&3)
    case $rule_choice in
        1)
	rule_name_prompt
	index_name_prompt
	cardinality_rule_prompt
	filter_options_prompt
	realert_prompt
	alert_option_prompt
	final_prompt
	;;
        2)
 	rule_name_prompt
        index_name_prompt
	blacklist_rule_prompt
	filter_options_prompt
        realert_prompt
        alert_option_prompt
        final_prompt
        ;;
        3)
	rule_name_prompt
        index_name_prompt
        whitelist_rule_prompt
        filter_options_prompt
        realert_prompt
        alert_option_prompt
        final_prompt
        ;;
	4)  
	rule_name_prompt
        index_name_prompt
        frequency_rule_prompt
        filter_options_prompt
        realert_prompt
        alert_option_prompt
        final_prompt
	;; 
	5)
        rule_name_prompt
        index_name_prompt
        change_rule_prompt
        filter_options_prompt
        realert_prompt
        alert_option_prompt
        final_prompt
        ;;
	6)
#        rule_name_prompt
#        index_name_prompt
        spike_rule_prompt
#        filter_options_prompt
#        realert_prompt
#        alert_option_prompt
#        final_prompt
        ;;

   esac
}
mainmenu
